SELECT A.FIRST_NAME, A.LAST_NAME,A.HIRE_DATE,A.MANAGER_ID, B.HIRE_DATE,B.EMPLOYEE_ID 
FROM EMPLOYEES A,EMPLOYEES B
WHERE A.MANAGER_ID=B.EMPLOYEE_ID AND A.HIRE_DATE<B.HIRE_DATE;

SELECT A.FIRST_NAME,A.HIRE_DATE,B.FIRST_NAME,B.HIRE_DATE,A.MANAGER_ID,B.EMPLOYEE_ID
FROM EMPLOYEES A FULL OUTER JOIN EMPLOYEES B ON 
A.MANAGER_ID=B.EMPLOYEE_ID AND A.HIRE_DATE<B.HIRE_DATE;

SELECT E.EMPLOYEE_ID, E.LAST_NAME,E.SALARY, D.DEPARTMENT_ID, D.DEPARTMENT_NAME  
FROM EMPLOYEES E FULL OUTER JOIN DEPARTMENTS D 
ON E.DEPARTMENT_ID=D.DEPARTMENT_ID 
WHERE SALARY > 10000 AND D.DEPARTMENT_NAME LIKE '%ing%' OR D.DEPARTMENT_NAME LIKE '%ING%';

SELECT EMPLOYEE_ID, FIRST_NAME, SALARY FROM EMPLOYEES WHERE SALARY = 
(SELECT MIN(SALARY) FROM EMPLOYEES);

SELECT COUNT(DISTINCT MANAGER_ID) AS COUNT FROM EMPLOYEES;

SELECT DEPARTMENT_ID, SUM(SALARY) FROM EMPLOYEES WHERE DEPARTMENT_ID IN (10,20,30) 
GROUP BY DEPARTMENT_ID HAVING SUM(SALARY)>20000;

SELECT DEPARTMENT_ID , JOB_ID,AVG(SALARY) AS SALARY
FROM EMPLOYEES WHERE JOB_ID NOT IN('ST MAN','ST CLERK')
GROUP BY DEPARTMENT_ID,JOB_ID HAVING AVG(SALARY)>10000 ORDER BY DEPARTMENT_ID;

SELECT DEPARTMENT_ID,COUNT(DEPARTMENT_ID) FROM EMPLOYEES
GROUP BY DEPARTMENT_ID HAVING COUNT(DEPARTMENT_ID)>1;

SELECT DEPARTMENT_ID FROM EMPLOYEES 
WHERE COUNT(DEPARTMENT_ID)>1;

select COUNT(DEPARTMENT_ID) FROM EMPLOYEES GROUP BY DEPARTMENT_ID;

SELECT EMPLOYEE_ID,FIRST_NAME,LAST_NAME,SALARY ,
CASE 
    WHEN SALARY < 10000 AND JOB_ID = 'IT_PROG' THEN 'POBRE ESPECIAL'
    WHEN SALARY < 10000 THEN 'POBRE'
    WHEN SALARY < 20000 THEN 'NORMAL'
    ELSE 'RICO'
END AS TIPO
FROM EMPLOYEES;

SELECT EMPLOYEE_ID,FIRST_NAME,LAST_NAME,JOB_ID,
CASE JOB_ID
    WHEN 'AD_VP' THEN 'ADMINISTRADOR'
    WHEN 'ST_MAN' THEN 'ESTRATEGA'
    WHEN 'ST_CLERK' THEN JOB_ID 
    ELSE 'VARIOS'
END AS "TIPO DE PUESTO"
FROM EMPLOYEES;

SELECT EMPLOYEE_ID,FIRST_NAME, JOB_ID, NULLIF(JOB_ID,'ST_CLERK') 
FROM EMPLOYEES;

SELECT EMPLOYEE_ID,FIRST_NAME, JOB_ID, 
COALESCE(SALARY,COMMISSION_PCT) FROM EMPLOYEES;

SELECT EMPLOYEE_ID, FIRST_NAME, SALARY, (SELECT TRUNC(AVG(SALARY),2) FROM EMPLOYEES) AS MEDIA
FROM EMPLOYEES WHERE 
SALARY > (SELECT AVG(SALARY) FROM EMPLOYEES);

SELECT AVG(SALARY) FROM EMPLOYEES;

SELECT EMPLOYEE_ID, FIRST_NAME,SALARY FROM EMPLOYEES 
WHERE SALARY > ALL(SELECT AVG(SALARY)
FROM EMPLOYEES GROUP BY DEPARTMENT_ID);

SELECT TRUNC(AVG(SALARY),0)
FROM EMPLOYEES GROUP BY DEPARTMENT_ID;

SELECT EMPLOYEE_ID,SALARY FROM EMPLOYEES
WHERE DEPARTMENT_ID = 100 AND 
SALARY > ANY(SELECT AVG(SALARY) FROM EMPLOYEES GROUP BY DEPARTMENT_ID);

SELECT DEPARTMENT_ID, AVG(SALARY) FROM EMPLOYEES
WHERE JOB_ID<>'ST_MAN' AND SALARY>(SELECT AVG(SALARY) FROM EMPLOYEES
WHERE JOB_ID<>'ST_MAN') GROUP BY DEPARTMENT_ID;

SELECT DEPARTMENT_ID, AVG(SALARY) AS MEDIA
FROM EMPLOYEES WHERE JOB_ID<>'ST_MAN'
GROUP BY DEPARTMENT_ID
HAVING AVG(SALARY) > (SELECT AVG(SALARY) FROM EMPLOYEES 
WHERE JOB_ID<>'ST_MAN');

CREATE TABLE MEJORES_EMPLEADOS(
    EMPLOYEE_ID NUMBER(6,0) PRIMARY KEY,
    FIRST_NAME VARCHAR2(20 BYTE),
    JOB_ID VARCHAR2(10 BYTE)
);

INSERT INTO MEJORES_EMPLEADOS 
SELECT E.EMPLOYEE_ID,E.FIRST_NAME,E.JOB_ID FROM EMPLOYEES E 
WHERE E.SALARY = (SELECT MAX(SALARY) FROM EMPLOYEES
GROUP BY JOB_ID HAVING E.JOB_ID = JOB_ID);

SELECT * FROM MEJORES_EMPLEADOS;

UPDATE MEJORES_EMPLEADOS SET JOB_ID='COD_NUEVO'
WHERE EMPLOYEE_ID BETWEEN 110 AND 140;

DELETE FROM MEJORES_EMPLEADOS WHERE JOB_ID IN (
SELECT DISTINCT E.JOB_ID FROM EMPLOYEES E WHERE E.JOB_ID LIKE 'AD%');

SELECT DISTINCT E.JOB_ID FROM EMPLOYEES E WHERE E.JOB_ID LIKE 'FI%';

SELECT COD_TRAB , MAX(SALARIO) AS MAXIMO_SALARIO FROM 
(SELECT CONCAT(JOB_ID,'-0.COD') AS COD_TRAB,SALARY AS SALARIO FROM EMPLOYEES)
GROUP BY COD_TRAB;

SELECT CONCAT(JOB_ID,'-0.COD') AS COD_TRAB,SALARY AS SALARIO FROM EMPLOYEES;

SELECT L.ISBN,L.TITULO,L.ANIO, A.NOMBRE FROM LB_LIBRO L , LB_AUTOR A
,LB_AUTOR_LIBRO LA WHERE L.ISBN = LA.ISBN AND A.IDAUTOR = LA.AUTOR
ORDER BY ANIO;

SELECT * FROM LB_LIBRO WHERE ANIO > 2000;

SELECT DISTINCT C.IDCLIENTE,C.NOMBRE FROM LB_CLIENTE C,LB_PEDIDO P 
WHERE C.IDCLIENTE= P.IDCLIENTE AND P.FECHAPEDIDO IS NOT NULL;

SELECT DISTINCT C.IDCLIENTE,C.NOMBRE FROM LB_CLIENTE C,LB_LIBROS_PEDIDO LP
,LB_PEDIDO P
WHERE LP.ISBN=4554672899910 AND LP.IDPEDIDO = P.IDPEDIDO
AND C.IDCLIENTE = P.IDCLIENTE;

SELECT C.NOMBRE ,L.TITULO
FROM LB_CLIENTE C , LB_LIBRO L,LB_LIBROS_PEDIDO LP,LB_PEDIDO P
WHERE C.NOMBRE LIKE '%San%' AND  C.IDCLIENTE=P.IDCLIENTE
AND P.IDPEDIDO = LP.IDPEDIDO
AND LP.ISBN=L.ISBN;

SELECT DISTINCT C.IDCLIENTE , C.NOMBRE 
FROM LB_CLIENTE C , LB_LIBRO L,LB_LIBROS_PEDIDO LP,LB_PEDIDO P
WHERE L.PRECIOVENTA>10 AND  C.IDCLIENTE=P.IDCLIENTE
AND P.IDPEDIDO = LP.IDPEDIDO
AND LP.ISBN=L.ISBN;

SELECT C.NOMBRE ,P.FECHAPEDIDO
FROM LB_CLIENTE C , LB_LIBRO L,LB_LIBROS_PEDIDO LP,LB_PEDIDO P
WHERE P.FECHAEXPED IS NULL AND  C.IDCLIENTE=P.IDCLIENTE
AND P.IDPEDIDO = LP.IDPEDIDO
AND LP.ISBN=L.ISBN;

SELECT DISTINCT C.IDCLIENTE , C.NOMBRE 
FROM LB_CLIENTE C , LB_LIBRO L,LB_LIBROS_PEDIDO LP,LB_PEDIDO P
WHERE L.PRECIOVENTA<10 AND  C.IDCLIENTE=P.IDCLIENTE
AND P.IDPEDIDO = LP.IDPEDIDO
AND LP.ISBN=L.ISBN;

SELECT DISTINCT L.TITULO, L.ANIO,L.PRECIOVENTA 
FROM LB_LIBRO L , LB_LIBROS_PEDIDO LP 
WHERE L.PRECIOVENTA > 30 OR L.ANIO<2000 AND (L.ISBN=LP.ISBN);

SELECT C.NOMBRE
FROM LB_CLIENTE C
WHERE C.IDCLIENTE IN (SELECT AU.IDCLIENTE FROM LB_PEDIDO AU 
 GROUP BY AU.IDCLIENTE HAVING COUNT(AU.FECHAPEDIDO)>1);

SELECT L.TITULO,CUENTA FROM(
SELECT LP.ISBN AS COD, SUM(LP.CANTIDAD) AS CUENTA FROM LB_LIBROS_PEDIDO LP
GROUP BY LP.ISBN) INNER JOIN LB_LIBRO L ON L.ISBN = COD;

SELECT C.IDCLIENTE, C.NOMBRE, GASTO FROM
(SELECT LP.ISBN,L.PRECIOVENTA 
FROM LB_LIBRO L , LB_LIBROS_PEDIDO LP
WHERE L.ISBN=LP.ISBN ) INNER JOIN LB_PEDIDO P 
ON P.IDPEDIDO = COD_PED , LB_CLIENTE;

SELECT C.NOMBRE, IMPORTE FROM (
SELECT P.IDPEDIDO FROM LB_PEDIDO P INNER JOIN LB_CLIENTE C1 
ON C1.IDCLIENTE = P.IDCLIENTE INNER JOIN LB_LIBROS_PEDIDO LP 
ON P.IDPEDIDO = LP.IDPEDIDO
) ,LB_CLIENTE C;

SELECT C1.NOMBRE, CUENTA FROM (
SELECT C.IDCLIENTE AS COD_CLI ,SUM(L.PRECIOVENTA) AS CUENTA
FROM LB_CLIENTE C,LB_LIBRO L,LB_PEDIDO P,LB_LIBROS_PEDIDO LP
WHERE C.IDCLIENTE = P.IDCLIENTE 
AND LP.IDPEDIDO = P.IDPEDIDO
AND LP.ISBN = L.ISBN GROUP BY C.IDCLIENTE) INNER JOIN LB_CLIENTE C1 
ON C1.IDCLIENTE = COD_CLI;

SELECT SUM(PRECIOVENTA) FROM LB_PEDIDO;

SELECT DISTINCT LP1.IDPEDIDO, TOTAL FROM(
SELECT LP.IDPEDIDO AS IDE_PE ,SUM(LP.CANTIDAD * L.PRECIOVENTA) AS TOTAL
FROM LB_LIBROS_PEDIDO LP, LB_LIBRO L
WHERE L.ISBN = LP.ISBN GROUP BY LP.IDPEDIDO 
HAVING SUM(LP.CANTIDAD * L.PRECIOVENTA) >100) 
INNER JOIN LB_LIBROS_PEDIDO LP1 
ON LP1.IDPEDIDO = IDE_PE;

SELECT L.TITULO,L.PRECIOVENTA FROM LB_LIBRO L
WHERE L.PRECIOVENTA > (SELECT AVG(LI.PRECIOVENTA) FROM LB_LIBRO LI);

SELECT L.TITULO,L.PRECIOVENTA FROM LB_LIBRO L 
WHERE L.PRECIOVENTA = (SELECT MAX(LI.PRECIOVENTA) FROM LB_LIBRO LI);

DECLARE 
    V NUMBER := 10;
BEGIN
V := V*2;
DBMS_OUTPUT.PUT_LINE(ROUND(DBMS_RANDOM.VALUE(1,10)));
END;

DECLARE 
    V_SALARIO NUMBER;
    V_NOMBRE VARCHAR2(20);
BEGIN 
    SELECT SALARIO,NOMBRE INTO V_SALARIO,V_NOMBRE
    FROM EMPLEADO WHERE EID = '355548984';
    DBMS_OUTPUT.PUT_LINE('EL SALARIO DE : ' || V_NOMBRE ||' ES: ' || V_SALARIO);
END;

DECLARE 
    TYPE PAIS IS RECORD(
        CO_PAIS NUMBER,
        DESCRIPCION VARCHAR2(40 BYTE),
        CONTINENTE VARCHAR2(25 BYTE)
    );
    miPais PAIS;
    CURSOR cur_PAISES IS 
        SELECT C.REGION_ID,C.COUNTRY_NAME,R.REGION_NAME
        FROM COUNTRIES C ,REGIONS R 
        WHERE C.REGION_ID = R.REGION_ID;
       
BEGIN
    OPEN cur_PAISES;
    LOOP
        FETCH cur_PAISES INTO miPais;
        EXIT WHEN cur_PAISES%NOTFOUND;
        DBMS_OUTPUT.PUT_LINE(miPais.CO_PAIS ||'-'||miPais.CONTINENTE||'-'
                            ||miPais.DESCRIPCION);
    END LOOP;
    CLOSE cur_PAISES;
END;






